# C compiler
CC = clang
CPP = clang++
LLVM_FLAGS = -S -emit-llvm -fopenmp -fno-discard-value-names -c
APP_FLAGS = -std=c++0x -Wall -Wno-deprecated -DNO_PFM -O0 -DUSE_OMP -DEDGES_ONLY -DENABLE_OUTPUT -pthread -fopenmp -L tools/lib  -I common -I openG -I/usr/lib/gcc/x86_64-linux-gnu/4.8/include/
LOOP_OPT_FLAGS = -load ../LoopAnnotation.so -loop-annotation
BB_OPT_FLAGS = -load ../BBAnnotationPass.so -bb-annotation
LLVM_LINK = llvm-link
OPT = opt
OUTPUT = bfs

# ========================================================================================================================================================================================================
# EXECUTABLE
# ========================================================================================================================================================================================================
$(OUTPUT): inst.ll
	$(CPP) inst.ll $(APP_FLAGS) -o $(OUTPUT)

# ========================================================================================================================================================================================================
# OBJECTS & LLVM IR
# ========================================================================================================================================================================================================
bfs.ll: bfs.cpp
	$(CPP) $(LLVM_FLAGS) $(APP_FLAGS) $< -o bfs.ll

# ========================================================================================================================================================================================================
# LLVM LINKING
# ========================================================================================================================================================================================================
linked.ll: bfs.ll ../../hook_functions/mcp_hooks.ll
	$(LLVM_LINK) -S $^ --override ../../hook_functions/mcp_hooks.ll -o linked.ll

# ========================================================================================================================================================================================================
# OPTIMIZATION
# ========================================================================================================================================================================================================
inst.ll: linked.ll
	$(OPT) -S $(BB_OPT_FLAGS) < linked.ll > inst.ll

# ========================================================================================================================================================================================================
# CLEAN
# ========================================================================================================================================================================================================
clean:
	rm -f *.o *.ll *~ linked.ll inst.ll *.json
