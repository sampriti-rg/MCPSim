# C compiler
CC = clang
CPP = clang++
LLVM_FLAGS = -S -emit-llvm -fopenmp -fno-discard-value-names -c
OPT_FLAGS = -load ../BBAnnotationPass.so -bb-annotation
LLVM_LINK = llvm-link
OPT = opt
OUTPUT = kmeans

# ========================================================================================================================================================================================================
# EXECUTABLE
# ========================================================================================================================================================================================================
$(OUTPUT): inst.ll
	$(CC) inst.ll -fopenmp -o $(OUTPUT)

# ========================================================================================================================================================================================================
# OBJECTS & LLVM IR
# ========================================================================================================================================================================================================
cluster.ll: cluster.c
	$(CC) $(LLVM_FLAGS) $< -o cluster.ll

getopt.ll: getopt.c
	$(CC) $(LLVM_FLAGS) $< -o getopt.ll

kmeans.ll: kmeans.c
	$(CC) $(LLVM_FLAGS) $< -o kmeans.ll

kmeans_clustering.ll: kmeans_clustering.c kmeans.h
	$(CC) $(LLVM_FLAGS) $< -o kmeans_clustering.ll

# ========================================================================================================================================================================================================
# LLVM LINKING
# ========================================================================================================================================================================================================
linked.ll: cluster.ll getopt.ll kmeans.ll kmeans_clustering.ll ../../hook_functions/mcp_hooks.ll
	$(LLVM_LINK) -S $^ --override ../../hook_functions/mcp_hooks.ll -o linked.ll

# ========================================================================================================================================================================================================
# OPTIMIZATION
# ========================================================================================================================================================================================================
inst.ll: linked.ll
	$(OPT) -S $(OPT_FLAGS) < linked.ll > inst.ll

# ========================================================================================================================================================================================================
# CLEAN
# ========================================================================================================================================================================================================
clean:
	rm -f *.o *.ll *~ linked.ll inst.ll *.json
